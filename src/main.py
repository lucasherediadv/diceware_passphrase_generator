# TODO: Learn more about .venv/ and requirements.txt or pyproject.toml.
# TODO: Add unittest
# TODO: Add Program Docs
# TODO: Learn more about type hinting

"""Program Docs"""
from random import randint

# Represent the number of dice to be rolled simultaneously.
# It is set to 5, corresponding to the 5-digit representation of words
# in the word list.
DICE_ROLLS = 5

# Represents the number of words in the passphrase.
# Defines the number of times 'roll_a_dice()' will be executed.
EXECUTIONS = 6

with open('list/eff_wordlist.txt', 'r', encoding='utf-8') as file:
    # For each line in the file, split the line into a list of strings.
    # The result is a list of lists, where each inner list represents
    # a line in the file.
    WORD_LIST = [line.split() for line in file]


def roll_a_dice() -> list[int]:
    """Simulates the roll of five dice, each producing a random number
    between 1 and 6.

    Generates a list of five integers, each representing the result of 
    a dice roll. Each roll is independent and the results are stored in
    the list in the order they were rolled.

    Returns:
        list[int]: A list of five integers,
        each between 1 and 6, inclusive
    """
    return [randint(1, 6) for _ in range(DICE_ROLLS)]


def execute_roll_a_dice() -> list[str]:
    """Executes 'roll_a_dice() in range 'EXECUTIONS' and returns
    the results as a list of strings.

    Concatenates the digits generated by 'roll_a_dice()' into a string
    and appends it to the result list.

    Returns:
        list[str]: A list of strings. Each string is a concatenation of
        the digits obtained from a single execution of 'roll_a_dice'.
    """
    results = []

    for _ in range(EXECUTIONS):
        roll_result = roll_a_dice()
        str_result = ''.join(map(str, roll_result))
        results.append(str_result)

    return results


def find_matches() -> str:
    """Finds matches between elements in 'WORD_LIST' and the results 
    of 'execute_roll_a_dice()'.
    
    - Checks if the first element (index[0]) of each sublist in
    'WORD_LIST' is present in the results of 'execute_roll_a_dice()'.
    - If True, apppends the second element (index[1]) of the sublist
    from 'WORD_LIST' to 'matches'.
    - Join the elements in 'matches' into a single string.

    Returns:
        str: A string of matches found between 'WORD_LIST' and
        'all_results', separated by spaces.
    """
    all_results = execute_roll_a_dice()

    matches = []

    for split_line in WORD_LIST:
        if split_line[0] in all_results:
            matches.append(split_line[1])

    return ' '.join(matches)


if __name__ == '__main__':
    print(find_matches())
